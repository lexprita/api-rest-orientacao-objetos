{
    "sourceFile": "src/controladores/AutorControlador.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1723664193019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723664225796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Request, Response } from \"express\";\r\n \r\n export default class AutorControlador {\r\n-    listar(req: Request, res: Response)\r\n-\r\n+    listar(req: Request, res: Response) {\r\n+    }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723664455974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,12 @@\n import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n \r\n+\r\n+\r\n export default class AutorControlador {\r\n+    private autores: Autor[] = autores\r\n     listar(req: Request, res: Response) {\r\n+        return res.json(this.autores)\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723664664899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,11 @@\n \r\n \r\n \r\n export default class AutorControlador {\r\n-    private autores: Autor[] = autores\r\n+\r\n+    // private autores: Autor[] = autores\r\n+\r\n     listar(req: Request, res: Response) {\r\n-        return res.json(this.autores)\r\n+        return res.json(autores)\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723664815083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,12 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665166466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665242570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665260739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+        return res.json(autor)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665268979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665529589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665560857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400)\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665622852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665698696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+    }\r\n+    const autor = new Autor({\r\n+        nome,\r\n+        idade\r\n+    })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665712288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+        const autor = new Autor({\r\n+            nome,\r\n+            idade\r\n+        })\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665746042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+        const autor = new Autor({\r\n+            nome,\r\n+            idade\r\n+        })\r\n+\r\n+        autores.push(autor)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665784490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+        const autor = new Autor({\r\n+            nome, idade\r\n+        })\r\n+\r\n+        autores.push(autor)\r\n+\r\n+        return res.status(201)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665799026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+        const autor = new Autor({\r\n+            nome, idade\r\n+        })\r\n+\r\n+        autores.push(autor)\r\n+\r\n+        return res.status(201).json(autor)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723665813986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import { Request, Response } from \"express\";\r\n+import { autores } from \"../bancodedados\";\r\n+import Autor from \"../modelos/Autor\";\r\n+\r\n+\r\n+\r\n+\r\n+export default class AutorControlador {\r\n+\r\n+    listar(req: Request, res: Response) {\r\n+        return res.json(autores)\r\n+    }\r\n+\r\n+    detalhar(req: Request, res: Response) {\r\n+        const { id } = req.params\r\n+\r\n+        const autor = autores.find((elemento) => {\r\n+            return elemento.id === id\r\n+        })\r\n+\r\n+        if (!autor) {\r\n+            return res.status(404).json({\r\n+                mensagem: 'Autor não encontrado'\r\n+            })\r\n+        }\r\n+\r\n+        return res.json(autor)\r\n+    }\r\n+\r\n+    cadastrar(req: Request, res: Response) {\r\n+        const { nome, idade } = req.body\r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+        const autor = new Autor({\r\n+            nome, idade\r\n+        })\r\n+\r\n+        autores.push(autor)\r\n+\r\n+        return res.status(201).json(autor)\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723666245040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,23 +42,11 @@\n         autores.push(autor)\r\n \r\n         return res.status(201).json(autor)\r\n     }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-import Autor from \"../modelos/Autor\";\r\n \r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n+    editar(req: Request, res: Response) {\r\n+        // buscar o autor que vai ser editado\r\n         const { id } = req.params\r\n \r\n         const autor = autores.find((elemento) => {\r\n             return elemento.id === id\r\n@@ -68,435 +56,7 @@\n             return res.status(404).json({\r\n                 mensagem: 'Autor não encontrado'\r\n             })\r\n         }\r\n-\r\n-        return res.json(autor)\r\n+        // alterar o nome e a idade do autor\r\n     }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400).json({\r\n-                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n-            })\r\n-        }\r\n-        const autor = new Autor({\r\n-            nome, idade\r\n-        })\r\n-\r\n-        autores.push(autor)\r\n-\r\n-        return res.status(201).json(autor)\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-import Autor from \"../modelos/Autor\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400).json({\r\n-                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n-            })\r\n-        }\r\n-        const autor = new Autor({\r\n-            nome, idade\r\n-        })\r\n-\r\n-        autores.push(autor)\r\n-\r\n-        return res.status(201)\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-import Autor from \"../modelos/Autor\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400).json({\r\n-                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n-            })\r\n-        }\r\n-        const autor = new Autor({\r\n-            nome,\r\n-            idade\r\n-        })\r\n-\r\n-        autores.push(autor)\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-import Autor from \"../modelos/Autor\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400).json({\r\n-                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n-            })\r\n-        }\r\n-        const autor = new Autor({\r\n-            nome,\r\n-            idade\r\n-        })\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-import Autor from \"../modelos/Autor\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400).json({\r\n-                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n-            })\r\n-        }\r\n-    }\r\n-    const autor = new Autor({\r\n-        nome,\r\n-        idade\r\n-    })\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400).json({\r\n-                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n-            })\r\n-        }\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-\r\n-        if (!nome || !idade) {\r\n-            return res.status(400)\r\n-        }\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-\r\n-    cadastrar(req: Request, res: Response) {\r\n-        const { nome, idade } = req.body\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-\r\n-        return res.json(autor)\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-        return res.json(autor)\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-\r\n-        if (!autor) {\r\n-            return res.status(404).json({\r\n-                mensagem: 'Autor não encontrado'\r\n-            })\r\n-        }\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-\r\n-    detalhar(req: Request, res: Response) {\r\n-        const { id } = req.params\r\n-\r\n-        const autor = autores.find((elemento) => {\r\n-            return elemento.id === id\r\n-        })\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n-}\n-import { Request, Response } from \"express\";\r\n-import { autores } from \"../bancodedados\";\r\n-import Autor from \"../modelos/Autor\";\r\n-\r\n-\r\n-\r\n-export default class AutorControlador {\r\n-\r\n-    // private autores: Autor[] = autores\r\n-\r\n-    listar(req: Request, res: Response) {\r\n-        return res.json(autores)\r\n-    }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723666314403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,17 @@\n \r\n     editar(req: Request, res: Response) {\r\n         // buscar o autor que vai ser editado\r\n         const { id } = req.params\r\n+        const { nome, idade } = req.body\r\n \r\n+\r\n+        if (!nome || !idade) {\r\n+            return res.status(400).json({\r\n+                mensagem: 'O nome e a idade do autor são obrigatórios'\r\n+            })\r\n+        }\r\n+\r\n         const autor = autores.find((elemento) => {\r\n             return elemento.id === id\r\n         })\r\n \r\n"
                },
                {
                    "date": 1723666379169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,6 +65,10 @@\n                 mensagem: 'Autor não encontrado'\r\n             })\r\n         }\r\n         // alterar o nome e a idade do autor\r\n+        autor.nome = nome\r\n+        autor.idade = idade\r\n+\r\n+        return res.status(204)\r\n     }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723666391986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,7 +68,7 @@\n         // alterar o nome e a idade do autor\r\n         autor.nome = nome\r\n         autor.idade = idade\r\n \r\n-        return res.status(204)\r\n+        return res.status(204).send()\r\n     }\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1723664193019,
            "name": "Commit-0",
            "content": "import { Request, Response } from \"express\";\r\n\r\nexport default class AutorControlador {\r\n    listar(req: Request, res: Response)\r\n\r\n}"
        }
    ]
}